name: Deploy

on:
  workflow_dispatch:
    inputs:
      environment:
        type: choice
        description: Environment
        required: true
        options:
          - dev
          - qa
          - stage

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      DEPLOYMENT_OWNER: miketheo423
      DEPLOYMENT_REPO: ci-env-${{ github.event.inputs.environment }}
      PROJECT_OWNER: miketheo423
      PROJECT_REPO: ci-workflow-poc
    steps:
      - name: Checkout Main Repo
        uses: actions/checkout@v2

      - name: Get Latest Release
        uses: actions/github-script@v5
        id: latest_release
        with:
          script: |
            const { GITHUB_WORKSPACE, PROJECT_OWNER, PROJECT_REPO } = process.env;
            const { getLatestRelease } = require(`${GITHUB_WORKSPACE}/ci/index.js`);

            const { name, tag_name, html_url } = await getLatestRelease({ github, owner: PROJECT_OWNER, repo: PROJECT_REPO });

            core.setOutput('name', name);
            core.setOutput('tag_name', tag_name);
            core.setOutput('html_url', html_url);

      - name: Update values.yml
        uses: actions/github-script@v5
        env:
          VERSION: "${{ steps.latest_release.outputs.tag_name }}"
        with:
          github-token: ${{ secrets.PAT }}
          script: |
            const { GITHUB_WORKSPACE, VERSION, DEPLOYMENT_OWNER, DEPLOYMENT_REPO } = process.env;
            const path = 'values.yaml';

            const { getValuesFile, updateVersionInFile, updateValuesFile } = require(`${GITHUB_WORKSPACE}/ci/index.js`);


            const { content, sha } = await getValuesFile({ github, owner: DEPLOYMENT_OWNER, repo: DEPLOYMENT_REPO, path })

            const updatedContent = updateVersionInFile(content, VERSION);

            await updateValuesFile({
              github,
              path,
              sha,
              content: updatedContent,
              owner: DEPLOYMENT_OWNER,
              repo: DEPLOYMENT_REPO,
              version: VERSION 
            });

      - name: Checkout Deployment Repo
        uses: actions/checkout@v2
        with:
          repository: "${{ env.DEPLOYMENT_OWNER }}/${{ env.DEPLOYMENT_REPO }}"
          ref: main
          token: ${{ secrets.PAT }}

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.PAT }}
        with:
          release_name: ${{ steps.latest_release.outputs.name }}
          tag_name: ${{ steps.latest_release.outputs.tag_name }}
          commitish: ${{ github.ref }}
          body: |
            Release Notes:
            ${{ steps.latest_release.outputs.html_url }}
          draft: false
          prerelease: false
          owner: ${{ env.DEPLOYMENT_OWNER }}
          repo: ${{ env.DEPLOYMENT_REPO }}
